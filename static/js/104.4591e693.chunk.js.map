{"version":3,"file":"static/js/104.4591e693.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/customers/css/customers.module.css?85d9","pages/customers/Customers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customersContainer\":\"customers_customersContainer__nqcf+\",\"customersContainer__filterBoard\":\"customers_customersContainer__filterBoard__8GKo6\",\"customersContainer__filterBoard__btns\":\"customers_customersContainer__filterBoard__btns__GNrgX\",\"customersContainer__filterBoard__btns__all\":\"customers_customersContainer__filterBoard__btns__all__-Zb9q\",\"customersContainer__filterBoard__btns__allBlur\":\"customers_customersContainer__filterBoard__btns__allBlur__-RDIC\",\"customersContainer__filterBoard__btns__active\":\"customers_customersContainer__filterBoard__btns__active__CVHO+\",\"customersContainer__filterBoard__btns__activeBlur\":\"customers_customersContainer__filterBoard__btns__activeBlur__tfv9X\",\"customersContainer__filterBoard__inputBox\":\"customers_customersContainer__filterBoard__inputBox__NxpOt\",\"customersContainer__filterBoard__inputBox__svg\":\"customers_customersContainer__filterBoard__inputBox__svg__A-7Fd\",\"customersContainer__filterBoard__inputBox__input\":\"customers_customersContainer__filterBoard__inputBox__input__7v-u4\",\"customersContainer__table\":\"customers_customersContainer__table__Xm20V\",\"customersContainer__table__tr__indentBgn\":\"customers_customersContainer__table__tr__indentBgn__yCCuI\",\"customersContainer__table__tr__th\":\"customers_customersContainer__table__tr__th__RNAy-\",\"customersContainer__table__tr__thStatus\":\"customers_customersContainer__table__tr__thStatus__u8dmo\",\"customersContainer__table__tr__indentEnd\":\"customers_customersContainer__table__tr__indentEnd__HPdFf\",\"customersContainer__table__tr\":\"customers_customersContainer__table__tr__JVUbW\",\"customersContainer__table__td\":\"customers_customersContainer__table__td__Jr4HU\",\"customersContainer__table__tdStatus\":\"customers_customersContainer__table__tdStatus__i6Uyx\",\"customersContainer__table__tdStatus__active\":\"customers_customersContainer__table__tdStatus__active__Jhktn\",\"customersContainer__table__tdStatus__inactive\":\"customers_customersContainer__table__tdStatus__inactive__rcNER\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport listCustomers from '../../path/to/customers.json';\nimport css from '../../pages/customers/css/customers.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\n\nconst Customers = () => {\n  const itemsPerPage = 1;\n\n  const [filter, setFilter] = useState('');\n  const [isFocused, setIsFocused] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages ] = useState(Math.ceil(listCustomers.length / itemsPerPage));\n  \n  let maxPageNumbersToShow;\n  \n  const filteredCustomers = useMemo(() => {\n  return listCustomers.filter(row => row.name.toLowerCase().includes(filter.toLowerCase()) || row.company.toLowerCase().includes(filter.toLowerCase()) || row.phone.includes(filter) || row.email.toLowerCase().includes(filter.toLowerCase()) || row.country.toLowerCase().includes(filter.toLowerCase()) || row.status.includes(filter));\n}, [filter]);\n\n// Обновление totalPages\n   useEffect(() => {\n      const newTotalPages = Math.ceil(filteredCustomers.length / itemsPerPage);\n      setTotalPages(newTotalPages);\n        \n  }, [filter, filteredCustomers, itemsPerPage]);\n\n// Обновление currentPage\n  useEffect(() => {\n\n\n    if (currentPage > totalPages) {\n    setCurrentPage(1);\n    }\n    \n  }, [currentPage, itemsPerPage, filteredCustomers, totalPages]);\n  \n   const displayItems = useMemo(() => {\n  return filteredCustomers.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n}, [currentPage, itemsPerPage, filteredCustomers]);\n  \n\n  maxPageNumbersToShow = totalPages > 3 ? 4 : totalPages;\n  \n    \n    const handleClick = (pageNumber) => {\n      setCurrentPage(pageNumber);\n    };\n    \n    const generatePageNumbers = () => {\n      const pageNumbers = [];\n      let startPage = currentPage - 2;\n      let endPage = currentPage + 1;\n    \n      if (startPage <= 0) {\n        startPage = 1;\n        endPage = startPage + maxPageNumbersToShow - 1;\n      }\n    \n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = endPage - maxPageNumbersToShow + 1;\n      }\n    \n      for (let i = startPage; i <= endPage; i++) {\n        pageNumbers.push(i);\n      }\n    \n      return pageNumbers;\n    };\n  \n  \n  const handleChangeName = (event) => {\n    setFilter(event.currentTarget.value);\n    setCurrentPage(1);\n\n    if (event.currentTarget.value !== \"Active\") {\n        setIsFocused(true);\n    };\n\n    if (event.currentTarget.value === \"Active\") {\n        setIsFocused(false);\n    };\n\n    \n\n  };\n  \n\n  return (\n    <div className={css.customersContainer}>\n      <div className={css.customersContainer__filterBoard}>\n        <div className={css.customersContainer__filterBoard__btns}>\n          <button className={isFocused ? css.customersContainer__filterBoard__btns__all : css.customersContainer__filterBoard__btns__allBlur} onClick={() => { setFilter(''); setCurrentPage(1) } } onFocus={() => setIsFocused(true)} >All Customers</button>\n          <button className={!isFocused ? css.customersContainer__filterBoard__btns__active : css.customersContainer__filterBoard__btns__activeBlur} onClick={() => { setFilter(\"Active\"); setCurrentPage(1) }} onFocus={() => setIsFocused(false)}>Active Members</button>\n        </div>\n        <div className={css.customersContainer__filterBoard__inputBox}>\n          <svg width=\"24\" height=\"24\" className={css.customersContainer__filterBoard__inputBox__svg}>\n                <use xlinkHref={`${sprite}#search`} />\n          </svg>\n          <input type=\"text\" value={filter} onChange={handleChangeName} placeholder=\"Search\" className={css.customersContainer__filterBoard__inputBox__input} />\n        </div>\n      </div>\n      <table className={css.customersContainer__table}>\n              <thead>\n              <tr className={css.customersContainer__table__tr}>\n                  <th className={css.customersContainer__table__tr__indentBgn}></th>\n                  <th className={css.customersContainer__table__tr__th}>Customer Name</th>\n                  <th className={css.customersContainer__table__tr__th}>Company</th>\n                  <th className={css.customersContainer__table__tr__th}>Phone Number</th>\n                  <th className={css.customersContainer__table__tr__th}>Email</th>\n                  <th className={css.customersContainer__table__tr__th}>Country</th>\n                  <th className={css.customersContainer__table__tr__thStatus}>Status</th>\n                  <th className={css.customersContainer__table__tr__indentEnd}></th>\n              </tr>\n              </thead>\n  \n              {filter ?\n              <tbody>\n                  {displayItems.map(filteredCustomer => (\n                          <tr key={filteredCustomer.id}>\n                              <td></td>\n                              <td className={css.customersContainer__table__td}>{filteredCustomer.name}</td>\n                              <td className={css.customersContainer__table__td}>{filteredCustomer.company}</td>\n                              <td className={css.customersContainer__table__td}>{filteredCustomer.phone}</td>\n                              <td className={css.customersContainer__table__td}>{filteredCustomer.email}</td>\n                              <td className={css.customersContainer__table__td}>{filteredCustomer.country}</td>\n                              <td className={css.customersContainer__table__tdStatus}><div className={filteredCustomer.status === \"Inactive\" ? css.customersContainer__table__tdStatus__inactive : css.customersContainer__table__tdStatus__active}>{filteredCustomer.status}</div></td>\n                              <td></td>\n                          </tr>\n                      ))}\n              </tbody>\n              :\n              <tbody>\n                  {displayItems.map(listCustomer => (\n                          <tr key={listCustomer.id}>\n                              <td></td>\n                              <td className={css.customersContainer__table__td}>{listCustomer.name}</td>\n                              <td className={css.customersContainer__table__td}>{listCustomer.company}</td>\n                              <td className={css.customersContainer__table__td}>{listCustomer.phone}</td>\n                              <td className={css.customersContainer__table__td}>{listCustomer.email}</td>\n                              <td className={css.customersContainer__table__td}>{listCustomer.country}</td>\n                              <td className={css.customersContainer__table__tdStatus}><div className={listCustomer.status === \"Inactive\" ? css.customersContainer__table__tdStatus__inactive : css.customersContainer__table__tdStatus__active}>{listCustomer.status}</div></td>\n                              <td></td>\n                          </tr>\n                      ))}\n              </tbody>}\n      </table>\n      <div>\n        <button onClick={() => handleClick(currentPage - 1)} disabled={currentPage === 1}>Назад</button>\n      {currentPage > 3 && (totalPages > 4 &&(<button onClick={() => handleClick(1)}>1</button>))}\n      {currentPage > 3 &&  (totalPages > 4 &&(<span>...</span>))}\n      {generatePageNumbers().map((pageNumber) => (\n        <button\n          key={pageNumber}\n          onClick={() => handleClick(pageNumber)}\n          style={{ backgroundColor: pageNumber === currentPage ? 'blue' : 'grey' }}\n        >\n          {pageNumber}\n        </button>\n      ))}\n      \n      {currentPage < totalPages - 1 && (totalPages > 4 &&(<span>...</span>))}\n      {currentPage < totalPages - 1  && ( totalPages > 4 &&\n        (<button onClick={() => handleClick(totalPages)}>{totalPages}</button>)\n        )}\n        <button onClick={() => handleClick(currentPage + 1)} disabled={currentPage === totalPages}>Вперед</button>\n    </div>\n    </div>\n  );\n};\n\nexport default Customers;"],"names":["maxPageNumbersToShow","_useState","useState","_useState2","_slicedToArray","filter","setFilter","_useState3","_useState4","isFocused","setIsFocused","_useState5","_useState6","currentPage","setCurrentPage","_useState7","Math","ceil","listCustomers","_useState8","totalPages","setTotalPages","filteredCustomers","useMemo","row","name","toLowerCase","includes","company","phone","email","country","status","useEffect","newTotalPages","length","displayItems","slice","handleClick","pageNumber","_jsxs","className","css","children","_jsx","onClick","onFocus","width","height","xlinkHref","concat","sprite","type","value","onChange","event","currentTarget","placeholder","map","filteredCustomer","id","listCustomer","disabled","pageNumbers","startPage","endPage","i","push","generatePageNumbers","style","backgroundColor"],"sourceRoot":""}